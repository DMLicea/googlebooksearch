{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danielle\\\\Desktop\\\\CODING\\\\Homework20\\\\googlebooksearch\\\\client\\\\src\\\\pages\\\\Saved.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/BookList\";\nimport { Input, TextArea, FormBtn } from \"../components/BookForm\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nclass Saved extends Component {\n  constructor(props) {\n    super(props);\n    this.loadBooks = this.loadBooks.bind(this);\n    this.handleBookAction = this.handleBookAction.bind(this);\n    this.state = {\n      pageTag: 'Your Saved Books of Interest',\n      action: 'delete',\n      books: []\n    };\n  }\n  /**\r\n   * On successful rendering of the page, get all saved books from the\r\n   * backend.\r\n   */\n\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks() {\n    API.getSavedBooks().then(res => {\n      const bookList = res.data;\n      this.setState({\n        books: bookList\n      });\n    }).catch(error => console.log(error));\n  }\n\n  handleBookAction(id) {\n    API.deleteBook(id).then(() => this.loadBooks()).catch(error => console.log(error));\n  }\n  /**\r\n   * Render the page elements.\r\n   */\n\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Books On My List\")), this.state.books.length ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.books.map(book => React.createElement(ListItem, {\n      key: book._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/books/\" + book._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, book.title, \" by \", book.author))))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"No Results to Display\")));\n  }\n\n}\n\n;\nexport default Saved;","map":{"version":3,"sources":["C:\\Users\\Danielle\\Desktop\\CODING\\Homework20\\googlebooksearch\\client\\src\\pages\\Saved.js"],"names":["React","Component","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Jumbotron","Saved","constructor","props","loadBooks","bind","handleBookAction","state","pageTag","action","books","componentDidMount","getSavedBooks","then","res","bookList","data","setState","catch","error","console","log","id","deleteBook","render","length","map","book","_id","title","author"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,wBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,wBAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,KAAN,SAAoBZ,SAApB,CAA8B;AAC5Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AAEA,SAAKE,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,8BADE;AAEXC,MAAAA,MAAM,EAAE,QAFG;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;AAED;;;;;;AAIAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,SAAL;AACD;;AAEDA,EAAAA,SAAS,GAAG;AAEVd,IAAAA,GAAG,CAACsB,aAAJ,GAEGC,IAFH,CAESC,GAAD,IAAS;AAEb,YAAMC,QAAQ,GAAGD,GAAG,CAACE,IAArB;AAEA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEK;AAAT,OAAd;AAED,KARH,EAUGG,KAVH,CAUUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAVpB;AAWD;;AAGDb,EAAAA,gBAAgB,CAACgB,EAAD,EAAK;AAEnBhC,IAAAA,GAAG,CAACiC,UAAJ,CAAeD,EAAf,EAEGT,IAFH,CAEQ,MAAM,KAAKT,SAAL,EAFd,EAIGc,KAJH,CAIUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJpB;AAKD;AAED;;;;;AAGAK,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADJ,EAIK,KAAKjB,KAAL,CAAWG,KAAX,CAAiBe,MAAjB,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,KAAL,CAAWG,KAAX,CAAiBgB,GAAjB,CAAqBC,IAAI,IACxB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,YAAYD,IAAI,CAACC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,KADR,UACmBF,IAAI,CAACG,MADxB,CADF,CADF,CADD,CADH,CADD,GAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAlBN,CADF,CADF;AA0BD;;AA7E2B;;AA6E1B;AAEJ,eAAe7B,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/BookList\";\r\nimport { Input, TextArea, FormBtn } from \"../components/BookForm\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nclass Saved extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.loadBooks = this.loadBooks.bind(this);\r\n    this.handleBookAction = this.handleBookAction.bind(this);\r\n\r\n    this.state = {\r\n      pageTag: 'Your Saved Books of Interest',\r\n      action: 'delete',\r\n      books: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * On successful rendering of the page, get all saved books from the\r\n   * backend.\r\n   */\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks() {\r\n\r\n    API.getSavedBooks()\r\n\r\n      .then((res) => {\r\n\r\n        const bookList = res.data;\r\n\r\n        this.setState({ books: bookList });\r\n\r\n      })\r\n\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n\r\n  handleBookAction(id) {\r\n\r\n    API.deleteBook(id)\r\n\r\n      .then(() => this.loadBooks())\r\n\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  /**\r\n   * Render the page elements.\r\n   */\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n            <Jumbotron>\r\n              <h1>Books On My List</h1>\r\n            </Jumbotron>\r\n            {this.state.books.length ? (\r\n              <List>\r\n                {this.state.books.map(book => (\r\n                  <ListItem key={book._id}>\r\n                    <Link to={\"/books/\" + book._id}>\r\n                      <strong>\r\n                        {book.title} by {book.author}\r\n                      </strong>\r\n                    </Link>\r\n                    {/* <DeleteBtn onClick={() => this.deleteBook(book._id)} /> */}\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n\r\n        </Row>\r\n      </Container>    \r\n      )\r\n  }};\r\n  \r\nexport default Saved;"]},"metadata":{},"sourceType":"module"}